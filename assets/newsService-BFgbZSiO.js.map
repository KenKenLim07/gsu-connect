{"version":3,"file":"newsService-BFgbZSiO.js","sources":["../../src/components/ui/card.tsx","../../src/lib/supabase.ts","../../src/services/newsService.ts"],"sourcesContent":["import * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }; ","import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL;\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables');\n}\n\n// Create a single instance of the Supabase client\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    autoRefreshToken: true,\n    detectSessionInUrl: true\n  }\n});\n\n// Export the singleton instance\nexport { supabase }; ","import { supabase } from '@/lib/supabase';\nimport type { NewsItem, NewsResponse } from '@/types/news';\nimport type { PostgrestError } from '@supabase/supabase-js';\n\ninterface SupabaseNewsItem {\n  id: string;\n  title: string;\n  content: string;\n  published_at: string;\n  source_url: string;\n  campus_id: string;\n  created_at: string;\n  image_url: string | null;\n  campus: {\n    id: string;\n    name: string;\n    location?: string;\n    created_at: string;\n  } | null;\n}\n\nfunction mapSupabaseToNewsItem(item: unknown): NewsItem {\n  const newsItem = item as SupabaseNewsItem;\n  return {\n    id: newsItem.id,\n    title: newsItem.title,\n    content: newsItem.content,\n    published_at: newsItem.published_at,\n    source_url: newsItem.source_url,\n    campus_id: newsItem.campus_id,\n    created_at: newsItem.created_at,\n    image_url: newsItem.image_url || undefined,\n    campus: newsItem.campus ? {\n      id: newsItem.campus.id,\n      name: newsItem.campus.name,\n      location: newsItem.campus.location,\n      created_at: newsItem.campus.created_at\n    } : undefined\n  };\n}\n\n// Keep track of in-flight requests\nlet currentFetch: Promise<NewsResponse> | null = null;\n\nexport async function getNews(): Promise<NewsResponse> {\n  try {\n    // If there's already a request in flight, return its result\n    if (currentFetch) {\n      return currentFetch;\n    }\n\n    console.log('Fetching news from Supabase...');\n    console.log('Supabase URL:', import.meta.env.VITE_SUPABASE_URL);\n\n    // Create new request\n    currentFetch = (async () => {\n      try {\n        // Test connection first\n        const { error: testError } = await supabase\n          .from('news')\n          .select('id')\n          .limit(1);\n\n        if (testError) {\n          console.error('Supabase connection test failed:', testError);\n          return { data: [], error: testError, count: 0 };\n        }\n\n        console.log('Supabase connection successful, fetching full news data...');\n\n        // Fetch full news data\n    const { data, error, count } = await supabase\n      .from('news')\n      .select(`\n        *,\n        campus:campus_id (\n          id,\n              name\n        )\n          `, { count: 'exact' })\n          .order('created_at', { ascending: false });\n\n    if (error) {\n      console.error('Error fetching news:', error);\n      return { data: [], error, count: 0 };\n    }\n\n        return { \n          data: data.map(mapSupabaseToNewsItem), \n          error: null, \n          count: count || 0 \n        };\n      } finally {\n        // Clear the current fetch after completion\n        currentFetch = null;\n      }\n    })();\n\n    return currentFetch;\n  } catch (error) {\n    console.error('Unexpected error in getNews:', error);\n    return { data: [], error: error as PostgrestError, count: 0 };\n  }\n}\n\nexport async function getNewsByCampus(campusId: string): Promise<NewsResponse> {\n  try {\n    const { data, error, count } = await supabase\n      .from('news')\n      .select(`\n        *,\n        campus:campus_id (\n          id,\n          name\n        )\n      `, { count: 'exact' })\n      .eq('campus_id', campusId)\n      .order('created_at', { ascending: false });\n\n    if (error) {\n      console.error('Error fetching news by campus:', error);\n      return { data: [], error, count: 0 };\n    }\n\n    return { \n      data: data.map(mapSupabaseToNewsItem), \n      error: null, \n      count: count || 0 \n    };\n  } catch (error) {\n    console.error('Unexpected error in getNewsByCampus:', error);\n    return { data: [], error: error as PostgrestError, count: 0 };\n  }\n} "],"names":["Card","React.forwardRef","className","props","ref","jsx","cn","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","supabaseUrl","supabaseAnonKey","supabase","createClient","mapSupabaseToNewsItem","item","newsItem","currentFetch","getNews","testError","data","error","count"],"mappings":"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"}